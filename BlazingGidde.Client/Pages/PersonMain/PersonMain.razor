@page "/person"
@using BlazingGidde.Client.Services
@using BlazingGidde.Client.Shared
@using BlazingGidde.Shared.DTOs.Person
@using BlazingGidde.Shared.DTOs.Person.Request
@using BlazingGidde.Shared.Models.PersonMain
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Forms
@using AgileObjects.AgileMapper.Extensions

@inject PersonMainManager personManager
@attribute [Authorize]

<PageTitle>Application Person</PageTitle>

<DxGrid Data="@Data" @ref="@Grid" EditMode="GridEditMode.PopupEditForm" CustomizeEditModel="Grid_CustomizeEditModel"
	EditModelSaving="Grid_EditModelSaving">
	<Columns>
		<DxGridCommandColumn></DxGridCommandColumn>
		<DxGridDataColumn Caption="Person ID" FieldName="PersonId">
		</DxGridDataColumn>

		<DxGridDataColumn Caption="First Name" FieldName="FirstName">
		</DxGridDataColumn>

		<DxGridDataColumn Caption="Last Name" FieldName="LastName">
		</DxGridDataColumn>

		<DxGridDataColumn Caption="Title" FieldName="Title">
		</DxGridDataColumn>

		<DxGridDataColumn Caption="Culture" FieldName="Culture">
		</DxGridDataColumn>
	</Columns>

	<EditFormTemplate Context="EditFormContext">
		@{
			var person = (CreatePersonDto)EditFormContext.EditModel;
		}
		<DxFormLayout CssClass="w-100">
			<DxFormLayoutItem Caption="Id" ColSpanMd="6">
				@EditFormContext.GetEditor("PersonId")
			</DxFormLayoutItem>

			<DxFormLayoutItem Caption="First Name:" ColSpanMd="6">
				@EditFormContext.GetEditor("FirstName")
			</DxFormLayoutItem>

			<DxFormLayoutItem Caption="Last Name:" ColSpanMd="6">
				@EditFormContext.GetEditor("LastName")
			</DxFormLayoutItem>

			<DxFormLayoutItem Caption="Title:" ColSpanMd="6">
				@EditFormContext.GetEditor("Title")
			</DxFormLayoutItem>

			<DxFormLayoutItem Caption="Culture:" ColSpanMd="6">
				@EditFormContext.GetEditor("Culture")
			</DxFormLayoutItem>

			<DxFormLayoutItem Caption="Remarks:" ColSpanMd="6">
				@EditFormContext.GetEditor("Remarks")
			</DxFormLayoutItem>
		</DxFormLayout>
	</EditFormTemplate>
</DxGrid>

@code {
	IGrid Grid { get; set; }
	object Data { get; set; }

	protected override void OnInitialized()
	{
		Data = personManager.Get();
	}

	async Task Grid_EditModelSaving(GridEditModelSavingEventArgs e)
	{
		var editedProduct = (CreatePersonDto)e.EditModel;
		var result = e.IsNew == false ? personManager.Update(editedProduct) : personManager.Insert(editedProduct);

	}

	async Task Grid_CustomizeEditModel(GridCustomizeEditModelEventArgs e)
	{
		var dataItem = (PersonDto)e.DataItem;
		if (dataItem == null)
			e.EditModel = new CreatePersonDto { };
		else
		{
			e.EditModel = dataItem.Map().ToANew<CreatePersonDto>();
		}
	}
}
