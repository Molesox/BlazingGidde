@page "/appusers"
@using BlazingGidde.Client.Services
@using BlazingGidde.Client.Shared
@using BlazingGidde.Shared.Models.Identity
@using BlazingGidde.Shared.Models.Patois
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
 
@inject AspNetUserManager UserManager

@attribute [Authorize]

<PageTitle>Application Users</PageTitle>
 

    
    <GenericGrid TEntity="IdentityUser" Title="My Users"
                Repository="@UserManager"
                Columns="@myColumns">
        <EditFormTemplate Context="user">
              <div class="mb-3">
            <label class="form-label">User Name</label>
            <InputText class="form-control" @bind-Value="user.UserName" />
        </div>
        <div class="mb-3">
            <label class="form-label">Email</label>
            <InputText class="form-control" @bind-Value="user.Email" type="email" />
        </div>
        <div class="mb-3">
            <label class="form-label">Phone Number</label>
            <InputText class="form-control" @bind-Value="user.PhoneNumber" />
        </div>
        <div class="mb-3 form-check">
            <InputCheckbox class="form-check-input" @bind-Value="user.LockoutEnabled" />
            <label class="form-check-label">Lockout Enabled</label>
        </div>
        <div class="mb-3 form-check">
            <InputCheckbox class="form-check-input" @bind-Value="user.TwoFactorEnabled" />
            <label class="form-check-label">Two-Factor Authentication Enabled</label>
        </div>
        </EditFormTemplate>
    </GenericGrid>

@code {
    private List<ColumnDefinition<IdentityUser>> myColumns = new();
    
    protected override void OnInitialized()
    {
        myColumns = new List<ColumnDefinition<IdentityUser>>
        {
            new ColumnDefinition<IdentityUser>(x => x.Id, "ID"),
            new ColumnDefinition<IdentityUser>(x => x.UserName, "User Name", isEditable: true),
            new ColumnDefinition<IdentityUser>(x => x.Email, "Email", isEditable: true),
            new ColumnDefinition<IdentityUser>(x => x.PhoneNumber, "Phone Number", isEditable: true),
            new ColumnDefinition<IdentityUser>(x => x.LockoutEnabled, "Lockout Enabled", isEditable: true),
            new ColumnDefinition<IdentityUser>(x => x.TwoFactorEnabled, "2FA Enabled", isEditable: true)
        };
    }
}