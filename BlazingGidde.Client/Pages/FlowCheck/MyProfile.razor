@page "/myprofile"
@using BlazingGidde.Shared.DTOs.FlowCheck
@using BlazingGidde.Shared.DTOs.Person
@using BlazingGidde.Shared.Repository
@using BlazingGidde.Shared.Models.PersonMain
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject AspNetUserManager UserManager
@inject PersonMainManager PersonManager

@inject IJSRuntime JSRuntime

<h3>Perfil de @UserPerson.FirstName @UserPerson.LastName </h3>

@if(UserPerson is not null)
{
    <DxFormLayout CssClass="w-100">
        <DxFormLayoutGroup Caption="Información personal" ColSpanMd="6">
            <DxFormLayoutItem Caption="Nombre" ColSpanMd="12">
                <DxTextBox @bind-Text="@UserPerson.FirstName" ReadOnly="true" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Apellido" ColSpanMd="12">
                <DxTextBox @bind-Text="@UserPerson.LastName" ReadOnly="true" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Dirección" ColSpanMd="12">
                <DxTextBox @bind-Text="@UserPerson.DefaultAddress" ReadOnly="true" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Title" ColSpanMd="12">
                <DxTextBox @bind-Text="@UserPerson.Title" ReadOnly="true" />
            </DxFormLayoutItem>
        </DxFormLayoutGroup>
        <DxFormLayoutGroup Caption="Información del trabajo" ColSpanMd="6">
            <DxFormLayoutItem Caption="Telefono" ColSpanMd="12">
                <DxTextBox @bind-Text="@FlowUserDto.PhoneNumber" ReadOnly="true" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Email" ColSpanMd="12">
                <DxTextBox @bind-Text="@FlowUserDto.Email" ReadOnly="true" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Culture" ColSpanMd="12">
                <DxTextBox @bind-Text="@UserPerson.Culture" ReadOnly="true" />
            </DxFormLayoutItem>
        </DxFormLayoutGroup>
        <DxFormLayoutGroup ColSpanMd="12" Caption="Descripción" ExpandButtonDisplayMode="GroupExpandButtonDisplayMode.Start" AnimationType="LayoutAnimationType.Slide">
            <DxFormLayoutItem ColSpanMd="12">
                <DxMemo @bind-Text="Notes" Rows="4" aria-label="User info" />
            </DxFormLayoutItem>
        </DxFormLayoutGroup>
    </DxFormLayout>
}
else
{
    <p>Cargando información del perfil...</p>
}

@code {
    private FlowUserDto FlowUserDto { get; set; } = new();
    private PersonDto UserPerson { get; set; } = new();
    public string Notes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var email = authState.User.Identity?.Name;

        if (email is null) return;

        var filter = new QueryFilter<FlowUser>()
            {
                FilterProperties = new List<FilterProperty>()
            {
                new()
                {
                    Name = nameof(FlowUser.Email),
                    Value = email,
                    Operator = QueryFilterOperator.Equals
                }
            }
        };
        var result = await UserManager.Get(filter);
        FlowUserDto = result.Items.First();

        if (FlowUserDto is null) return;
        var personfilter = new QueryFilter<Person>
            {
                FilterProperties = new List<FilterProperty>
            {
                new()
                {
                    Name = nameof(Person.ApplicationUserId),
                    Value = FlowUserDto.Id,
                }
            }
        };
        var personResult = await PersonManager.Get(personfilter);
        UserPerson = personResult.Items.First();

    }
}
