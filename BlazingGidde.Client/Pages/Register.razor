@page "/register"
@using BlazingGidde.Shared.Models.Identity
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card">
                <EditForm Model="@_registerModel" OnValidSubmit="@HandleValidSubmit" Context="EditFormContext">
                    <DataAnnotationsValidator/>
                    <div class="card-header text-center py-3">
                        <img src="OnaSoft-logo.svg" alt="Company Logo"/>
                    </div>
                    <div class="card-body">
                        <DxFormLayout>
                            <DxFormLayoutItem ColSpanMd="12">
                                <label for="tbFirstname" class="d-none">FirstName</label>
                                <DxTextBox @bind-Text="@_registerModel.FirstName" NullText="First name"
                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                           InputId="tbFirstname"/>
                                <div class="text-danger">
                                    <ValidationMessage For="@(() => _registerModel.FirstName)"/>
                                </div>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem ColSpanMd="12">
                                <label for="tbLastname" class="d-none">LatName</label>
                                <DxTextBox @bind-Text="@_registerModel.LastName" NullText="Last name"
                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                           InputId="tbLastname"/>
                                <div class="text-danger">
                                    <ValidationMessage For="@(() => _registerModel.LastName)"/>
                                </div>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem ColSpanMd="12">
                                <label for="tbEmail" class="d-none">E-mail</label>
                                <DxTextBox @bind-Text="@_registerModel.Email" NullText="E-mail"
                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" InputId="tbEmail"/>
                                <div class="text-danger">
                                    <ValidationMessage For="@(() => _registerModel.Email)"/>
                                </div>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem ColSpanMd="12">
                                <label for="tbPassword" class="d-none">Password</label>
                                <DxTextBox @bind-Text="@_registerModel.Password" NullText="Password" Password="true"
                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                           InputId="tbPassword"/>
                                <div class="text-danger">
                                    <ValidationMessage For="@(() => _registerModel.Password)"/>
                                </div>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem ColSpanMd="12">
                                <label for="tbConfirmPassword" class="d-none">Confirm Password</label>
                                <DxTextBox @bind-Text="@_registerModel.ConfirmPassword" NullText="Confirm Password"
                                           Password="true" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                           InputId="tbConfirmPassword"/>
                                <div class="text-danger">
                                    <ValidationMessage For="@(() => _registerModel.ConfirmPassword)"/>
                                </div>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem ColSpanMd="12">
                                <DxButton CssClass="w-100" RenderStyle="ButtonRenderStyle.Primary"
                                          SubmitFormOnClick="true" Text="Register"/>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem ColSpanMd="12">
                                <div class="text-center pt-2">
                                    <div class="tm-8">
                                        Already have an account?
                                    </div>
                                    <DxButton RenderStyle="ButtonRenderStyle.Link" Text="Login"
                                              Click="GotoLoginFormClick"/>
                                </div>
                            </DxFormLayoutItem>
                        </DxFormLayout>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {

    private string _error = "";

    private readonly RegisterModel _registerModel = new();

    void GotoLoginFormClick()
    {
        NavigationManager.NavigateTo("/login");
    }

    async Task HandleValidSubmit()
    {
        var result = await AuthService.Register(_registerModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            if (result.Errors is not null)
            {
                _error = string.Join("<br>", result.Errors);
            }


            await InvokeAsync(StateHasChanged);
        }
    }

}