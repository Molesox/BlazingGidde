@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="tree">
	<SfTreeView TValue="MenuItem" FullRowNavigable="true">
		<TreeViewFieldsSettings TValue="MenuItem" DataSource="@MenuItems"
								Id="Id" ParentID="ParentId"
								Text="Text" HasChildren="HasChildren"
								NavigateUrl="NavigateUrl" IconCss="IconCss">
		</TreeViewFieldsSettings>
	</SfTreeView>
</div>

@code {
	public List<MenuItem> MenuItems { get; set; } = new List<MenuItem>();

	protected override async Task OnInitializedAsync()
	{
		// Get the current user's authentication state
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;

		InitializeMenu(user);
	}

	private void InitializeMenu(System.Security.Claims.ClaimsPrincipal user)
	{
		// Common menu items
		MenuItems.Add(new MenuItem { Id = "1", Text = "Home", NavigateUrl = "", ParentId = null, Expanded = true, IconCss = "e-icons e-home" });
		MenuItems.Add(new MenuItem { Id = "2", Text = "Counter", NavigateUrl = "counter", ParentId = null, Expanded = true, IconCss = "e-icons e-calculation" });
		MenuItems.Add(new MenuItem { Id = "3", Text = "Weather", NavigateUrl = "weather", ParentId = null, Expanded = true, IconCss = "e-icons e-nature" });

		// Role-specific items
		// if (user.IsInRole("Admin"))
		{
			MenuItems.Add(new MenuItem { Id = "4", Text = "Admin", ParentId = null, Expanded = true, HasChildren = true });
			MenuItems.Add(new MenuItem { Id = "5", Text = "Users", NavigateUrl = "aspnetusers", ParentId = "4" });
		}
	}

	public class MenuItem
	{
		public string Id { get; set; }
		public string ParentId { get; set; }
		public string Text { get; set; }
		public string NavigateUrl { get; set; }
		public bool HasChildren { get; set; }
		public bool Expanded { get; set; }
		public string IconCss { get; set; }
	}
}
