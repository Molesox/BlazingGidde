@inherits LayoutComponentBase
@layout MainLayout
@inject TemplateKindManager templateKindManager
@inject TemplateTypeManager templateTypeManager
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<DxStackLayout Orientation="Orientation.Vertical" CssClass="w-100 ch-480">
    <Items>
        <DxStackLayoutItem Length="auto">
            <Template>
                <DxFormLayout CaptionPosition="CaptionPosition.Vertical">
                    <DxFormLayoutItem ColSpanMd="6" Caption="Nombre">
                        <DxTextBox @bind-Text="kind.Name" />
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="3" Caption="Versión">
                        <DxSpinEdit @bind-Value="kind.Version" Enabled="false" />
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="3" Caption="Fecha">
                        <DxDateEdit @bind-Date="kind.CreateDate" Enabled="false" />
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="6" Caption="Descripción del programa">
                        <DxTextBox @bind-Text="kind.ProgramDescription" />
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="3" Caption="Sección">
                        <DxTextBox @bind-Text="kind.Section" />
                    </DxFormLayoutItem>
                </DxFormLayout>
            </Template>
        </DxStackLayoutItem>

        <DxStackLayoutItem>
            <Template>
                @Body
            </Template>
        </DxStackLayoutItem>

        <DxStackLayoutItem Length="auto">
            <Template>
                <div style="margin-bottom: 20px;">
                    <DxButton RenderStyle="ButtonRenderStyle.Secondary" Click="Cancel">
                        Cancelar
                    </DxButton>
                    <DxButton style="margin-left: 4px;" RenderStyle="ButtonRenderStyle.Primary" Click="Save">
                        Guardar
                    </DxButton>
                </div>
            </Template>
        </DxStackLayoutItem>
    </Items>
</DxStackLayout>

@code {
    [Parameter] public string TemplateCode { get; set; }

    private TemplateType selectedTemplate;

    public List<TemplateType> type { get; set; } = new List<TemplateType>();

    public List<CustomTemplateItem> Items { get; set; } = new();

    protected TemplateKind kind { get; set; } = new();

    [Parameter] public TemplateType? CurrentTemplateType { get; set; }

    DateTime DateTimeValue { get; set; } = DateTime.Now;

    protected override async Task OnInitializedAsync()
    {
        selectedTemplate = await templateTypeManager.GetByCode(TemplateCode);
        kind.Version = 1;
    }

    private async Task Cancel()
    {
        NavigationManager.NavigateTo("/templates-type");
    }

    private async Task Save()
    {
        await templateKindManager.Insert(kind);
        await JSRuntime.InvokeVoidAsync("alert", "Plantilla guardada exitosamente.");
        NavigationManager.NavigateTo("/templates-type");
    }
}
